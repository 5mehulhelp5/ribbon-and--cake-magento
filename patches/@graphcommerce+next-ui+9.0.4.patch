diff --git a/node_modules/@graphcommerce/next-ui/ActionCard/ActionCard.tsx b/node_modules/@graphcommerce/next-ui/ActionCard/ActionCard.tsx
index f94c113..7febaf0 100644
--- a/node_modules/@graphcommerce/next-ui/ActionCard/ActionCard.tsx
+++ b/node_modules/@graphcommerce/next-ui/ActionCard/ActionCard.tsx
@@ -1,8 +1,10 @@
 import type { BoxProps, ButtonProps, SxProps, Theme } from '@mui/material'
-import { alpha, Box, ButtonBase, lighten } from '@mui/material'
-import React from 'react'
+import { alpha, Box, ButtonBase, Checkbox, FormControl, FormControlLabel, lighten } from '@mui/material'
+import React, { KeyboardEvent } from 'react'
 import { extendableComponent, responsiveVal } from '../Styles'
 import { breakpointVal } from '../Styles/breakpointVal'
+import { CheckboxElement } from '@graphcommerce/ecommerce-ui'
+import { Trans } from '@lingui/react'
 
 type Variants = 'outlined' | 'default'
 type Size = 'large' | 'medium' | 'small' | 'responsive'
@@ -121,6 +123,8 @@ export function ActionCard<C extends React.ElementType = typeof Box>(props: Acti
     layout = 'list',
     error = false,
     slotProps = {},
+    // control
+    // isCheckbox = false,
   } = props
 
   const classes = withState({
@@ -135,7 +139,20 @@ export function ActionCard<C extends React.ElementType = typeof Box>(props: Acti
   })
 
   return (
-    <ButtonOrBox
+    <>
+      <FormControlLabel
+        className={classes.root}
+        sx={{ fontSize: "14px" }}
+        control={<Checkbox
+          onClick={onClick ? (event) => onClick(event, value) : undefined}
+          value={value}
+          checked={selected}
+          disabled={disabled}
+        />}
+        label={title}
+      />
+
+      {/* <ButtonOrBox
       className={classes.root}
       onClick={onClick ? (event) => onClick(event, value) : undefined}
       disabled={disabled}
@@ -305,6 +322,7 @@ export function ActionCard<C extends React.ElementType = typeof Box>(props: Acti
               alignItems: 'flex-start',
             }}
           >
+            
             {title && (
               <Box
                 className={classes.title}
@@ -392,6 +410,7 @@ export function ActionCard<C extends React.ElementType = typeof Box>(props: Acti
           {after}
         </Box>
       )}
-    </ButtonOrBox>
+    </ButtonOrBox> */}
+    </>
   )
 }
diff --git a/node_modules/@graphcommerce/next-ui/ActionCard/ActionCardAccordion.tsx b/node_modules/@graphcommerce/next-ui/ActionCard/ActionCardAccordion.tsx
index 323c7e3..b51afee 100644
--- a/node_modules/@graphcommerce/next-ui/ActionCard/ActionCardAccordion.tsx
+++ b/node_modules/@graphcommerce/next-ui/ActionCard/ActionCardAccordion.tsx
@@ -1,20 +1,25 @@
 import type { SxProps, Theme } from '@mui/material'
-import { Accordion, AccordionDetails, AccordionSummary } from '@mui/material'
+import { Accordion, AccordionDetails, AccordionSummary, Typography } from '@mui/material'
 import type { ReactNode } from 'react'
 import { useState } from 'react'
 import { IconSvg } from '../IconSvg'
 import { iconChevronDown } from '../icons'
+import { StaticImport } from '@graphcommerce/image'
+
 
 export type ActionCardAccordionProps = {
   summary: ReactNode
   details: ReactNode
-  right: ReactNode
+  right?: ReactNode
   sx?: SxProps<Theme>
   defaultExpanded?: boolean
+  accordionIcon?: string | StaticImport  
+  openAccordionIcon?: string | StaticImport 
+  closeAccordionIcon?: string | StaticImport
 }
 
 export function ActionCardAccordion(props: ActionCardAccordionProps) {
-  const { summary, details, right, defaultExpanded = true, sx } = props
+  const { summary, details, right, defaultExpanded = true, sx,openAccordionIcon ,closeAccordionIcon} = props
   const [expanded, setExpanded] = useState(defaultExpanded)
   const handleChange = () => setExpanded(!expanded)
 
@@ -39,20 +44,35 @@ export function ActionCardAccordion(props: ActionCardAccordionProps) {
     >
       <AccordionSummary
         onClick={(e) => e.preventDefault()}
-        expandIcon={<IconSvg src={iconChevronDown} />}
-        sx={{
-          px: 0,
-          typography: 'subtitle1',
-          minHeight: 54,
-          '& .MuiAccordionSummary-content': {
-            display: 'flex',
-            justifyContent: 'space-between',
-            alignItems: 'center',
-            my: 0,
-          },
-        }}
+        expandIcon={(openAccordionIcon && closeAccordionIcon)&&<IconSvg src={expanded ? closeAccordionIcon : openAccordionIcon} sx={(theme) => ({
+              width: '30px',
+            })} size='xl' />}
+            sx={{
+              px: 0,
+              typography: 'subtitle1',
+              minHeight: 54,
+              '& .MuiAccordionSummary-content': {
+                display: 'flex',
+                justifyContent: 'space-between',
+                alignItems: 'center',
+                my: 0,
+              },
+              ['& .MuiAccordionSummary-expandIconWrapper']:{
+                transform:"unset !important",
+                ['& svg']:{
+                  stroke:"unset !important",
+                }
+              }    
+            }}
       >
-        <div>{summary}</div>
+        <Typography component='p' sx={{
+          fontFamily: "'Bricolage Grotesque', sans-serif",
+          fontWeight:400,
+          color:'#000',
+          fontSize: {xs:'14px', sm:'16px', md:'20px'},
+          lineHeight: '120%',
+          marginBottom:theme => theme.spacings.xxs,
+        }}>{summary}</Typography>
         {right}
       </AccordionSummary>
       <AccordionDetails sx={{ p: 0 }}>{details}</AccordionDetails>
diff --git a/node_modules/@graphcommerce/next-ui/ActionCard/ActionCardList.tsx b/node_modules/@graphcommerce/next-ui/ActionCard/ActionCardList.tsx
index c93e224..d388761 100644
--- a/node_modules/@graphcommerce/next-ui/ActionCard/ActionCardList.tsx
+++ b/node_modules/@graphcommerce/next-ui/ActionCard/ActionCardList.tsx
@@ -6,7 +6,7 @@ import { isFragment } from 'react-is'
 import { Button } from '../Button'
 import { IconSvg } from '../IconSvg'
 import { extendableComponent } from '../Styles'
-import { iconChevronDown } from '../icons'
+import { iconChevronDown, iconChevronLeft } from '../icons'
 import type { ActionCardProps } from './ActionCard'
 import { ActionCardLayout } from './ActionCardLayout'
 
@@ -174,7 +174,7 @@ export const ActionCardList = React.forwardRef<HTMLDivElement, ActionCardListPro
                 transform: show ? 'rotate(180deg)' : 'rotate(0deg)',
                 transition: 'transform 0.3s ease-in-out',
               }}
-              src={iconChevronDown}
+              src={iconChevronLeft}
             />
           </Button>
         )}
diff --git a/node_modules/@graphcommerce/next-ui/Fab/Fab.tsx b/node_modules/@graphcommerce/next-ui/Fab/Fab.tsx
index c705a8c..4f74619 100644
--- a/node_modules/@graphcommerce/next-ui/Fab/Fab.tsx
+++ b/node_modules/@graphcommerce/next-ui/Fab/Fab.tsx
@@ -36,12 +36,12 @@ export function Fab(props: FabProps) {
       size={size}
       {...fabProps}
       disabled={disabled}
-      sx={[{ display: 'grid' }, ...(Array.isArray(sx) ? sx : [sx])]}
+      sx={[{ display: 'grid', backgroundColor:'#F6DBE0 !important', boxShadow:'none !important',color:'#441E14 !important' }, ...(Array.isArray(sx) ? sx : [sx])]}
     >
       <Box sx={{ display: 'flex', placeContent: 'center', gridArea: '1/1' }}>
         <IconSvg src={icon} size='medium' {...slotProps?.icon} />
       </Box>
-      {loading && (
+      { /* loading && (
         <CircularProgress
           size={fabSize}
           color={color !== 'primary' ? 'primary' : 'inherit'}
@@ -51,7 +51,7 @@ export function Fab(props: FabProps) {
             slotProps?.circularProgress?.sx,
           )}
         />
-      )}
+      ) */ }
     </FabBase>
   )
 }
diff --git a/node_modules/@graphcommerce/next-ui/IconSvg/IconSvg.tsx b/node_modules/@graphcommerce/next-ui/IconSvg/IconSvg.tsx
index 9088844..1c5017b 100644
--- a/node_modules/@graphcommerce/next-ui/IconSvg/IconSvg.tsx
+++ b/node_modules/@graphcommerce/next-ui/IconSvg/IconSvg.tsx
@@ -59,7 +59,7 @@ export function useIconSvgSize(size: keyof typeof sizes) {
 
 const Svg = styled('svg', { name, target: name })(() => ({
   userSelect: 'none',
-  width: '1em',
+  width: '0.8em',
   height: '1em',
   display: 'inline-block',
 
diff --git a/node_modules/@graphcommerce/next-ui/Intl/NumberFormat/CurrencyFormat.tsx b/node_modules/@graphcommerce/next-ui/Intl/NumberFormat/CurrencyFormat.tsx
index 12d2b28..c1716bc 100644
--- a/node_modules/@graphcommerce/next-ui/Intl/NumberFormat/CurrencyFormat.tsx
+++ b/node_modules/@graphcommerce/next-ui/Intl/NumberFormat/CurrencyFormat.tsx
@@ -1,5 +1,6 @@
 import type { NumberFormatProps } from './NumberFormat'
 import { NumberFormat } from './NumberFormat'
+import type { SxProps, Theme } from '@mui/material'
 
 // https://en.wikipedia.org/wiki/ISO_4217#List_of_ISO_4217_currency_codes
 type Currency =
@@ -185,9 +186,11 @@ type Currency =
 
 export type CurrencyFormatProps = Omit<NumberFormatProps, 'numberStyle'> & {
   currency: Currency | (string & Record<never, never>)
+    sx?: SxProps<Theme>
+  
 }
 
 /** @public */
 export function CurrencyFormat(props: CurrencyFormatProps) {
-  return <NumberFormat {...props} numberStyle='currency' />
+  return <NumberFormat {...props} numberStyle='currency' sx={props.sx} />
 }
diff --git a/node_modules/@graphcommerce/next-ui/Intl/NumberFormat/NumberFormat.tsx b/node_modules/@graphcommerce/next-ui/Intl/NumberFormat/NumberFormat.tsx
index af23c02..7bc22ab 100644
--- a/node_modules/@graphcommerce/next-ui/Intl/NumberFormat/NumberFormat.tsx
+++ b/node_modules/@graphcommerce/next-ui/Intl/NumberFormat/NumberFormat.tsx
@@ -1,22 +1,60 @@
-import { Box } from '@mui/material'
-import { forwardRef } from 'react'
-import type { UseIntlNumberFormatOptions } from './useIntlNumberFormat'
-import { useIntlNumberFormat } from './useIntlNumberFormat'
+import { Box } from '@mui/material';
+import { forwardRef } from 'react';
+import type { UseIntlNumberFormatOptions } from './useIntlNumberFormat';
+import { useIntlNumberFormat }
+from './useIntlNumberFormat';
+import type { SxProps, Theme } from '@mui/material';
 
-export type NumberFormatValue = number | bigint | Intl.StringNumericLiteral
+export type NumberFormatValue = number | bigint | Intl.StringNumericLiteral;
 
 export type NumberFormatProps = UseIntlNumberFormatOptions & {
-  value: NumberFormatValue
-}
+  value: NumberFormatValue;
+  sx?: SxProps<Theme>;
+ 
+};
 
 /** @public */
 export const NumberFormat = forwardRef<HTMLSpanElement, NumberFormatProps>((props, ref) => {
-  const { value, ...options } = props
-  const formatter = useIntlNumberFormat(options)
+  const { value, sx,  ...options } = props;
+  const formatter = useIntlNumberFormat(options);
+
+  const parts = formatter.formatToParts(value);
 
   return (
-    <Box component='span' suppressHydrationWarning ref={ref}>
-      {formatter.format(value)}
+    <Box
+      component='span'
+      suppressHydrationWarning
+      ref={ref}
+      sx={[
+        {
+          fontFamily: "'Bricolage Grotesque', sans-serif",
+          fontSize: { xs: '14px', sm: '16px', md: '18px' },
+          fontWeight: 800,
+          color: '#000',
+        },
+        
+        ...(Array.isArray(sx) ? sx : [sx]),
+      ]}
+    >
+      {parts.map((part, index) => {
+        let partStyle: SxProps<Theme> = {};
+        if (part.type === 'currency') {
+          partStyle = { color:'#000' }; 
+        } else if (
+          part.type === 'integer' ||
+          part.type === 'fraction' ||
+          part.type === 'decimal' ||
+          part.type === 'group'
+        ) {
+          partStyle = { color:  '#000' }; 
+        }
+
+        return (
+          <Box component='span' key={index} sx={partStyle}>
+            {part.value}
+          </Box>
+        );
+      })}
     </Box>
-  )
-})
+  );
+});
\ No newline at end of file
diff --git a/node_modules/@graphcommerce/next-ui/icons.interceptor.ts b/node_modules/@graphcommerce/next-ui/icons.interceptor.ts
new file mode 100644
index 0000000..8ec0302
--- /dev/null
+++ b/node_modules/@graphcommerce/next-ui/icons.interceptor.ts
@@ -0,0 +1,97 @@
+/* hash:522880710 */
+/* eslint-disable */
+/* This file is automatically generated for @graphcommerce/next-ui/icons */
+
+import {
+  iconSearch as iconSearchicons,
+  iconShoppingBag as iconShoppingBagicons,
+} from '../../../plugins/icons'
+
+/** @see {@link file://./icons.ts} for source of original */
+/** SOURCE_START */
+export { default as iconArrowDown } from './icons/arrow-down.svg'
+export { default as iconArrowBack } from './icons/arrow-left.svg'
+export { default as iconArrowForward } from './icons/arrow-right.svg'
+export { default as iconArrowUp } from './icons/arrow-up.svg'
+export { default as iconShoppingBagDisabled } from './icons/bag.svg'
+export { default as iconBin } from './icons/bin.svg'
+export { default as iconInvoice } from './icons/box-alt.svg'
+export { default as iconBox } from './icons/box.svg'
+export { default as iconOrderBefore } from './icons/calendar.svg'
+export { default as iconCancelAlt } from './icons/cancel-alt.svg'
+export { default as iconCancel } from './icons/cancel.svg'
+export { default as iconCartAdd } from './icons/cart-add.svg'
+export { default as iconCart } from './icons/cart.svg'
+export { default as iconChat } from './icons/chat-alt.svg'
+export { default as iconCustomerService } from './icons/chat.svg'
+export { default as iconChevronDown } from './icons/chevron-down.svg'
+export { default as iconChevronBack, default as iconChevronLeft } from './icons/chevron-left.svg'
+export { default as iconChevronRight } from './icons/chevron-right.svg'
+export { default as iconChevronUp } from './icons/chevron-up.svg'
+export { default as iconCirle } from './icons/circle.svg'
+export { default as iconClose } from './icons/close.svg'
+export { default as iconCompare } from './icons/compare-arrows.svg'
+export { default as iconContrast } from './icons/contrast.svg'
+export { default as iconCreditCard, default as iconId } from './icons/credit-card.svg'
+export { default as iconEllypsis } from './icons/ellypsis.svg'
+export { default as iconEmail, default as iconEmailOutline } from './icons/envelope-alt.svg'
+export { default as iconExit } from './icons/exit.svg'
+export { default as icon404 } from './icons/explore.svg'
+export { default as iconEyeClosed } from './icons/eye-closed.svg'
+export { default as iconEyeCrossed } from './icons/eye-crossed.svg'
+export { default as iconEye } from './icons/eye.svg'
+export { default as iconHeart } from './icons/favourite.svg'
+export { default as iconMenu } from './icons/hamburger.svg'
+export { default as iconParty } from './icons/happy-face.svg'
+export { default as iconAddresses, default as iconHome } from './icons/home-alt.svg'
+export { default as iconLanguage } from './icons/language.svg'
+export { default as iconLocation } from './icons/location.svg'
+export { default as iconLock } from './icons/lock.svg'
+export { default as iconFullscreen } from './icons/maximise.svg'
+export { default as iconFullscreenExit } from './icons/minimise.svg'
+export { default as iconMin } from './icons/minus.svg'
+export { default as iconMoon } from './icons/moon.svg'
+export { default as iconNewspaper } from './icons/news.svg'
+export { default as iconCheckmark } from './icons/ok.svg'
+export { default as iconPerson } from './icons/person-alt.svg'
+export { default as iconPlay } from './icons/play.svg'
+export { default as iconPlus } from './icons/plus.svg'
+export { default as iconShutdown } from './icons/power.svg'
+export { default as iconRefresh } from './icons/refresh.svg'
+export { default as iconSadFace } from './icons/sad-face.svg'
+export { default as iconSearchDisabled } from './icons/search.svg'
+export { default as iconPhone } from './icons/smartphone.svg'
+export { default as iconStar } from './icons/star.svg'
+export { default as iconSun } from './icons/sun.svg'
+export { default as iconInfo } from './icons/info.svg'
+
+/** SOURCE_END */
+
+const logged: Set<string> = new Set()
+const logOnce = (log: string, ...additional: unknown[]) => {
+  if (logged.has(log)) return
+  logged.add(log)
+  console.warn(log, ...additional)
+}
+
+/**
+ * Here you see the 'interceptor' that is applying all the configured plugins.
+ *
+ * This file is NOT meant to be modified directly and is auto-generated if the plugins or the
+ * original source changes.
+ *
+ * @see {@link file://./icons.ts} for original source file
+ * @see {iconShoppingBagicons} for replacement of the original source (original source not used)
+ */
+export const iconShoppingBag = iconShoppingBagicons
+
+/**
+ * Here you see the 'interceptor' that is applying all the configured plugins.
+ *
+ * This file is NOT meant to be modified directly and is auto-generated if the plugins or the
+ * original source changes.
+ *
+ * @see {@link file://./icons.ts} for original source file
+ * @see {iconSearchicons} for replacement of the original source (original source not used)
+ */
+export const iconSearch = iconSearchicons
